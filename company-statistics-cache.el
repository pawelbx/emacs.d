(setq company-statistics--scores #s(hash-table size 400 test equal rehash-size 1.5 rehash-threshold 0.8 data ("require-package" ((emacs-lisp-mode . 5) (nil . 6) ((:file "/home/pawel/.emacs.d/init.el") . 2) ((:file "/home/pawel/.emacs.d/lisp/init-ivy.el") . 2) ((:keyword "setq-default") . 1) ((:file "/home/pawel/.emacs.d/lisp/init-org.el") . 1) (lisp-interaction-mode . 1) ((:keyword "setq") . 1)) "js-indent-level" (((:file "/home/pawel/.emacs.d/init.el") . 1) (emacs-lisp-mode . 1) (nil . 1) ((:keyword "defvaralias") . 1)) "mentionsData" (((:file "/home/pawel/projects/work/tiles/twitter-conversation-analyzer/src/tc/Chart.js") . 2) ((:keyword "const") . 1) (rjsx-mode . 2) (nil . 2) ((:keyword "return") . 1)) "report_params" (((:file "/home/pawel/projects/work/dsp/api/app/models/twitter_report.rb") . 2) ((:keyword "self") . 2) (ruby-mode . 2) (nil . 2)) "cursors" (((:keyword "switch") . 1) ((:symbol "this") . 1) ((:keyword "class") . 1)) "isDown" (((:keyword "when") . 1) ((:symbol "down") . 1)) "tickValues" (((:file "/home/pawel/projects/work/tiles/twitter-conversation-analyzer/src/tc/Chart.js") . 1) ((:keyword "const") . 1) (rjsx-mode . 1) (nil . 1)) "getNFib" (((:keyword "end") . 1) ((:file "/home/pawel/projects/project-euler/104.rb") . 1) ((:keyword "return") . 1) (ruby-mode . 1) (nil . 1)) "isPandigital" (((:file "/home/pawel/projects/project-euler/104.rb") . 1) (ruby-mode . 1) (nil . 1)) "console" (((:file "/home/pawel/projects/mma-stats/scraper/ufc_scraper.js") . 1) ((:keyword "const") . 1) (js2-mode . 1) (nil . 1)) "nextEventName" (((:file "/home/pawel/projects/mma-stats/scraper/ufc_scraper.js") . 1) ((:keyword "const") . 1) (js2-mode . 1) (nil . 1)) "nextEventPath" (((:file "/home/pawel/projects/mma-stats/scraper/ufc_scraper.js") . 1) ((:keyword "const") . 1) (js2-mode . 1) (nil . 1)) "keyword_or_identifier" (((:file "/home/pawel/projects/sql-parser/lexer.rb") . 1) (ruby-mode . 1) (nil . 1) ((:keyword "self") . 1)) "next_char" (((:file "/home/pawel/projects/sql-parser/lexer.rb") . 4) (ruby-mode . 5) (nil . 5) ((:keyword "self") . 1) ((:keyword "when") . 2) ((:keyword "if") . 1) ((:file "/home/pawel/projects/sql-parser/parser.rb") . 1) ((:keyword "def") . 1)) "alphabet" (((:file "/home/pawel/projects/sql-parser/lexer.rb") . 2) ((:keyword "self") . 2) (ruby-mode . 2) (nil . 2) ((:symbol "nil") . 1)) "statistics" (((:file "/home/pawel/.emacs.d/.gitignore") . 1) (fundamental-mode . 1) (nil . 1)) "data_affiliation_active_flag" (((:file "/home/pawel/projects/work/lfm-etl/sql/brand_source_affiliations.sql") . 1) ((:symbol "bsa") . 1) ((:keyword "and") . 1) (sql-mode . 1) (nil . 1)) "Keyword" (((:keyword "if") . 1) (ruby-mode . 1) (nil . 1) ((:keyword "class") . 1) ((:file "/home/pawel/projects/sql-parser/parser.rb") . 2) ((:keyword "def") . 1)) "raw_data_point_keys" (((:file "/home/pawel/projects/work/dsp/api/spec/models/score_spec.rb") . 1) ((:symbol "Score") . 1) ((:keyword "end") . 1) (ruby-mode . 1) (nil . 1)) "contents" (((:file "/home/pawel/projects/sql-parser/lexer.rb") . 1) ((:symbol "nil") . 1) ((:keyword "self") . 1) (ruby-mode . 1) (nil . 1)) "tokenize" (((:file "/home/pawel/projects/sql-parser/lexer.rb") . 1) ((:keyword "end") . 1) (ruby-mode . 1) (nil . 1)) "nil" (((:file "/home/pawel/projects/sql-parser/lexer.rb") . 1) ((:keyword "when") . 1) (ruby-mode . 1) (nil . 1)) "attr_reader" (((:file "/home/pawel/projects/sql-parser/lexer.rb") . 4) ((:keyword "class") . 4) (ruby-mode . 4) (nil . 4)) "rescue" (((:file "/home/pawel/projects/sql-parser/lexer.rb") . 1) ((:keyword "self") . 1) (ruby-mode . 1) (nil . 1)) ":type" (((:file "/home/pawel/projects/sql-parser/lexer.rb") . 1) ((:keyword "class") . 1) (ruby-mode . 1) (nil . 1)) ":QUOTED_IDENTIFIER" (((:file "/home/pawel/projects/sql-parser/lexer.rb") . 1) ((:keyword "def") . 1) (ruby-mode . 1) (nil . 1)) "complete_word" (((:file "/home/pawel/projects/sql-parser/lexer.rb") . 1) ((:keyword "self") . 1) (ruby-mode . 1) (nil . 1)) "QuotedIdentifier" (((:file "/home/pawel/projects/sql-parser/lexer.rb") . 1) ((:keyword "if") . 1) (ruby-mode . 1) (nil . 1)) "quotedIdent" (((:file "/home/pawel/projects/sql-parser/lexer.rb") . 1) ((:keyword "return") . 1) (ruby-mode . 1) (nil . 1)) "quoted_identifier" (((:file "/home/pawel/projects/sql-parser/lexer.rb") . 1) ((:keyword "return") . 1) (ruby-mode . 1) (nil . 1)) "curr_token" (((:file "/home/pawel/projects/sql-parser/parser.rb") . 2) ((:symbol "nil") . 2) ((:keyword "def") . 2) (ruby-mode . 2) (nil . 2)) "NULL" ((fundamental-mode . 1) (nil . 1)) "badlogic" (((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 3) ((:symbol "com") . 3) ((:keyword "import") . 3) (java-mode . 3) (nil . 3)) "FitViewport" (((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 1) ((:symbol "viewport") . 1) ((:keyword "import") . 1) (java-mode . 1) (nil . 2) ((:file "/home/pawel/projects/space-warrior/.git/COMMIT_EDITMSG") . 1) (text-mode . 1)) "@Override" (((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 1) ((:keyword "public") . 1) (java-mode . 1) (nil . 1)) "viewport" (((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 3) ((:keyword "public") . 1) (java-mode . 3) (nil . 3) ((:symbol "camera") . 2) ((:keyword "new") . 2)) "graphics" (((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 1) ((:symbol "gdx") . 1) ((:keyword "import") . 1) (java-mode . 1) (nil . 1)) "shapeRenderer" (((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 4) ((:keyword "new") . 2) (java-mode . 13) (nil . 13) ((:keyword "private") . 2) ((:keyword "public") . 6) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/Spacecraft.java") . 9) ((:keyword "class") . 1) ((:symbol "this") . 1) ((:keyword "this") . 2)) "ShapeRenderer" (((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 2) ((:keyword "new") . 1) (java-mode . 3) (nil . 3) ((:keyword "private") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/Spacecraft.java") . 1) ((:keyword "class") . 1)) "OrthographicCamera" (((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 1) ((:keyword "new") . 1) (java-mode . 1) (nil . 1)) "handleInput" (((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 1) ((:keyword "private") . 1) (java-mode . 1) (nil . 1)) "Spacecraft" (((:file "/home/pawel/projects/space-warrior/core/src/com/main/Spacecraft.java") . 1) ((:keyword "class") . 1) (java-mode . 4) (nil . 5) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 3) ((:keyword "new") . 1) ((:keyword "private") . 1) ((:symbol "main") . 1) ((:keyword "import") . 1) ((:file "/home/pawel/projects/space-warrior/.git/COMMIT_EDITMSG") . 1) (text-mode . 1)) "consequences" ((fundamental-mode . 1) (nil . 1)) "ShapeType" (((:file "/home/pawel/projects/space-warrior/core/src/com/main/Spacecraft.java") . 1) ((:keyword "public") . 1) (java-mode . 1) (nil . 1)) "Vector2" (((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 2) ((:keyword "new") . 2) (java-mode . 4) (nil . 4) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/Spacecraft.java") . 2) ((:keyword "private") . 2)) "spacecraft" (((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 3) ((:keyword "public") . 2) (java-mode . 3) (nil . 3) ((:keyword "private") . 1)) "update" (((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 1) ((:symbol "spacecraft") . 1) ((:keyword "public") . 1) (java-mode . 1) (nil . 1)) "c-basic-common-init" ((lisp-interaction-mode . 1) (nil . 1)) "defvaralias" (((:file "/home/pawel/.emacs.d/init.el") . 3) ((:keyword "require") . 2) (emacs-lisp-mode . 3) (nil . 3) ((:keyword "defvaralias") . 1)) "c-basic-offset" (((:file "/home/pawel/.emacs.d/init.el") . 1) ((:keyword "defvaralias") . 1) (emacs-lisp-mode . 1) (nil . 1)) "tab-width" (((:file "/home/pawel/.emacs.d/init.el") . 3) ((:keyword "defvaralias") . 3) (emacs-lisp-mode . 3) (nil . 3)) "defun" ((lisp-interaction-mode . 2) (nil . 2)) "interactive" (((:file "/home/pawel/projects/home-scripts/stale-downloads.el") . 1) ((:keyword "defun") . 2) (emacs-lisp-mode . 2) (nil . 2) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) "file-attributes" (((:file "/home/pawel/projects/home-scripts/stale-downloads.el") . 1) ((:keyword "lambda") . 1) (emacs-lisp-mode . 1) (nil . 1)) "float-time" (((:keyword "require") . 1) (lisp-interaction-mode . 2) (nil . 3) ((:keyword "lambda") . 2) ((:file "/home/pawel/projects/home-scripts/stale-downloads.el") . 1) (emacs-lisp-mode . 1)) "current-time-string" (((:keyword "require") . 1) (lisp-interaction-mode . 2) (nil . 2) ((:keyword "lambda") . 1)) "time-subtract" (((:keyword "require") . 1) (lisp-interaction-mode . 2) (nil . 3) ((:keyword "lambda") . 2) ((:file "/home/pawel/projects/home-scripts/stale-downloads.el") . 1) (emacs-lisp-mode . 1)) "time-to-days" (((:keyword "require") . 1) (lisp-interaction-mode . 1) (nil . 1)) "time-to-seconds" (((:keyword "require") . 1) (lisp-interaction-mode . 1) (nil . 1)) "seconds-to-time" (((:keyword "require") . 1) (lisp-interaction-mode . 1) (nil . 1)) "date-to-time" (((:keyword "lambda") . 3) (lisp-interaction-mode . 2) (nil . 3) ((:file "/home/pawel/projects/home-scripts/stale-downloads.el") . 1) (emacs-lisp-mode . 1)) "current-time" (((:file "/home/pawel/projects/home-scripts/stale-downloads.el") . 1) ((:keyword "lambda") . 1) (emacs-lisp-mode . 1) (nil . 1)) "stale-downloads" (((:keyword "lambda") . 3) (lisp-interaction-mode . 5) (nil . 5)) "bodyDef" (((:file "/home/pawel/projects/space-warrior/core/src/com/main/Spacecraft.java") . 4) ((:symbol "this") . 3) ((:keyword "this") . 4) (java-mode . 4) (nil . 4)) "BodyDef" (((:file "/home/pawel/projects/space-warrior/core/src/com/main/Spacecraft.java") . 1) ((:keyword "new") . 1) (java-mode . 1) (nil . 1)) "worldHeight" (((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 2) ((:keyword "new") . 2) (java-mode . 2) (nil . 2)) "worldWidth" (((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 1) ((:keyword "new") . 1) (java-mode . 1) (nil . 1)) "sayHello" ((intero-repl-mode . 3) (nil . 3)) "triple" ((intero-repl-mode . 2) (nil . 3) ((:file "/home/pawel/projects/haskell/haskell-programming-first-principles/chapter-2/test.hs") . 1) (haskell-mode . 1)) "waxOff" ((intero-repl-mode . 1) (nil . 1)) "waxOn" ((intero-repl-mode . 1) (nil . 1)) "sorted-word-map" (((:keyword "lambda") . 1) (lisp-interaction-mode . 1) (nil . 1)) "str-contains?" (((:keyword "lambda") . 2) (lisp-interaction-mode . 3) (nil . 3) ((:keyword "let") . 1)) "char-to-string" (((:keyword "lambda") . 1) (lisp-interaction-mode . 1) (nil . 1)) "generate-anagram" (((:keyword "lambda") . 3) (lisp-interaction-mode . 2) (nil . 6) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 4) (emacs-lisp-mode . 4) ((:keyword "defun") . 1) ((:keyword "let") . 1)) "length" (((:keyword "lambda") . 1) (lisp-interaction-mode . 1) (nil . 2) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1) ((:keyword "let") . 1) (emacs-lisp-mode . 1)) "copy-sequence" (((:keyword "defun") . 1) (lisp-interaction-mode . 2) (nil . 2) ((:keyword "let") . 1)) "nthcdr" (((:keyword "let") . 3) (lisp-interaction-mode . 3) (nil . 8) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 5) ((:keyword "if") . 1) (emacs-lisp-mode . 5) ((:keyword "defun") . 3) ((:keyword "cond") . 1)) "shuff-list" (((:keyword "lambda") . 1) (lisp-interaction-mode . 2) (nil . 2) ((:keyword "let") . 1)) "dotimes" (((:keyword "let") . 1) (lisp-interaction-mode . 1) (nil . 1)) "shuffle" (((:keyword "let") . 2) (lisp-interaction-mode . 2) (nil . 2)) "make-hash-table" (((:keyword "let") . 2) (lisp-interaction-mode . 1) (nil . 2) ((:file "/home/pawel/projects/anagram-game/anagram-game.el") . 1) (emacs-lisp-mode . 1)) "gethash" (((:keyword "if") . 1) (lisp-interaction-mode . 1) (nil . 2) ((:file "/home/pawel/projects/anagram-game/anagram-game.el") . 1) ((:keyword "let*") . 1) (emacs-lisp-mode . 1)) "freq-table" (((:keyword "if") . 5) (lisp-interaction-mode . 5) (nil . 5)) "puthash" (((:keyword "if") . 3) (lisp-interaction-mode . 2) (nil . 3) ((:file "/home/pawel/projects/anagram-game/anagram-game.el") . 1) (emacs-lisp-mode . 1)) "lambda" (((:keyword "if") . 2) (lisp-interaction-mode . 2) (nil . 3) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1) ((:keyword "defun") . 1) (emacs-lisp-mode . 1)) "hash-table-values" (((:keyword "lambda") . 1) (lisp-interaction-mode . 2) (nil . 2) ((:keyword "if") . 1)) "valid-words" (((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 3) ((:keyword "let") . 3) (emacs-lisp-mode . 3) (nil . 3)) "norm-words" (((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1) ((:keyword "lambda") . 1) (emacs-lisp-mode . 1) (nil . 2) ((:keyword "with-temp-file") . 1) (lisp-interaction-mode . 1)) "switch-to-buffer" (((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1) ((:keyword "defun") . 1) (emacs-lisp-mode . 1) (nil . 1)) "define-derived-mode" (((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1) ((:keyword "let") . 1) (emacs-lisp-mode . 1) (nil . 1)) "anagram" (((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 4) ((:keyword "defun") . 3) (emacs-lisp-mode . 4) (nil . 4) ((:keyword "define-derived-mode") . 1)) "inhibit-read-only" (((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1) ((:keyword "let") . 2) (emacs-lisp-mode . 2) (nil . 2) ((:file "/home/pawel/projects/anagram-game/anagram-game.el") . 1)) "erase-buffer" (((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1) ((:keyword "let") . 3) (emacs-lisp-mode . 3) (nil . 3) ((:file "/home/pawel/projects/anagram-game/anagram-game.el") . 2)) "print-anagram-letters" (((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 4) ((:keyword "defun") . 2) (emacs-lisp-mode . 4) (nil . 4) ((:keyword "when") . 1) ((:keyword "if") . 1)) "define-key" (((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1) ((:keyword "define-derived-mode") . 1) (emacs-lisp-mode . 1) (nil . 1)) "shuffle-anagram-letters" (((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1) ((:keyword "define-derived-mode") . 1) (emacs-lisp-mode . 1) (nil . 1)) "insert-char" (((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1) ((:keyword "if") . 1) (emacs-lisp-mode . 1) (nil . 1)) "lexical-binding" (((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "current-anagram" (((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 8) ((:keyword "if") . 1) (emacs-lisp-mode . 8) (nil . 9) ((:keyword "let") . 3) ((:keyword "defun") . 4) (lisp-interaction-mode . 1)) "substring" (((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1) ((:keyword "defun") . 1) (emacs-lisp-mode . 1) (nil . 1)) "delete-anagram-letter" (((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1) ((:keyword "defun") . 1) (emacs-lisp-mode . 1) (nil . 1)) "anagram-set-msg" (((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 2) ((:keyword "if") . 2) (emacs-lisp-mode . 2) (nil . 2)) "anagram-state" (((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 2) ((:keyword "defun") . 2) (emacs-lisp-mode . 2) (nil . 2)) "anagram-get-points" (((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1) ((:keyword "let") . 1) (emacs-lisp-mode . 1) (nil . 1)) "member" (((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1) ((:keyword "if") . 1) (emacs-lisp-mode . 1) (nil . 1)) "add-to-list" (((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1) ((:keyword "defun") . 1) (emacs-lisp-mode . 1) (nil . 1)) "anagram-get-found" (((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 3) ((:keyword "defun") . 2) (emacs-lisp-mode . 3) (nil . 3) ((:keyword "let") . 1)) "propertize" (((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 3) ((:keyword "let") . 3) (emacs-lisp-mode . 3) (nil . 3)) "set-face-attribute" (((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1) ((:keyword "defvar") . 1) (emacs-lisp-mode . 1) (nil . 1)) ":foreground" (((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1) ((:keyword "defface") . 1) (emacs-lisp-mode . 1) (nil . 2) ((:keyword "require") . 1) (lisp-interaction-mode . 1)) "anagram-guess-face" (((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1) ((:keyword "let") . 1) (emacs-lisp-mode . 1) (nil . 1)) "face-spec-set" (((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1) ((:keyword "defface") . 1) (emacs-lisp-mode . 1) (nil . 1)) "anagram-message-face" (((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1) ((:keyword "defface") . 1) (emacs-lisp-mode . 1) (nil . 1)) "norm-word" (((:file "/home/pawel/projects/anagram-game/anagram-game.el") . 1) ((:keyword "let*") . 1) (emacs-lisp-mode . 1) (nil . 1)) "curr-words" (((:file "/home/pawel/projects/anagram-game/anagram-game.el") . 2) ((:keyword "let*") . 1) (emacs-lisp-mode . 2) (nil . 2) ((:keyword "if") . 1)) "-intersection" (((:file "/home/pawel/projects/anagram-game/anagram-game.el") . 1) ((:keyword "lambda") . 1) (emacs-lisp-mode . 1) (nil . 1)) "curr-word" (((:file "/home/pawel/projects/anagram-game/anagram-game.el") . 1) ((:keyword "lambda") . 1) (emacs-lisp-mode . 1) (nil . 1)) "delete-dups" (((:file "/home/pawel/projects/anagram-game/anagram-game.el") . 1) ((:keyword "lambda") . 1) (emacs-lisp-mode . 1) (nil . 1)) "redraw-frame" (((:file "/home/pawel/projects/anagram-game/anagram-game.el") . 1) ((:keyword "let") . 1) (emacs-lisp-mode . 1) (nil . 1)) "cl-coerce" ((lisp-interaction-mode . 2) (nil . 2) ((:keyword "require") . 1)) "redisplay" (((:file "/home/pawel/projects/anagram-game/anagram-game.el") . 1) ((:keyword "let") . 1) (emacs-lisp-mode . 1) (nil . 1)) "charset" (((:file "/home/pawel/projects/pawelbx.github.io/index.html") . 1) ((:keyword "!DOCTYPE") . 1) (html-mode . 1) (nil . 1)) "Acknowledgements" (((:file "/home/pawel/projects/maces-game/README.md") . 1) (fundamental-mode . 1) (nil . 2) ((:file "/home/pawel/projects/maces-game/.git/COMMIT_EDITMSG") . 1) (text-mode . 1)) "Emacs" (((:file "/home/pawel/projects/maces-game/README.md") . 1) (fundamental-mode . 1) (nil . 1)) "screenshot" (((:file "/home/pawel/projects/maces-game/README.md") . 1) (fundamental-mode . 1) (nil . 1)) "file-name-directory" (((:file "/home/pawel/projects/maces-game/maces-game.el") . 1) ((:keyword "with-current-buffer") . 1) (emacs-lisp-mode . 1) (nil . 1)) "Pawel" ((text-mode . 1) (nil . 1)) "client_socket" (((:file "/home/pawel/projects/scrap/http-server/servant.rb") . 4) ((:keyword "end") . 1) (ruby-mode . 4) (nil . 4) ((:keyword "do") . 3) ((:symbol "nil") . 1)) "client_addrinfo" (((:file "/home/pawel/projects/scrap/http-server/servant.rb") . 1) ((:keyword "do") . 1) (ruby-mode . 1) (nil . 1)) "server_header" (((:file "/home/pawel/projects/scrap/http-server/servant.rb") . 1) ((:keyword "end") . 1) (ruby-mode . 1) (nil . 1)) "OptionParser" (((:file "/home/pawel/projects/scrap/http-server/servant.rb") . 1) ((:keyword "end") . 1) (ruby-mode . 1) (nil . 1)) "IOError" (((:file "/home/pawel/projects/scrap/http-server/servant.rb") . 1) ((:keyword "unless") . 1) (ruby-mode . 1) (nil . 1)) "socket_listen" (((:file "/home/pawel/projects/scrap/http-server/servant.rb") . 1) ((:keyword "begin") . 1) (ruby-mode . 1) (nil . 1)) "helm-build-sync-source" (((:keyword "require") . 1) (lisp-interaction-mode . 1) (nil . 1)) ":inherit" (((:file "/home/pawel/projects/maces-game/maces-game.el") . 2) ((:keyword "defface") . 2) (emacs-lisp-mode . 2) (nil . 2)) "font-lock-keyword-face" (((:file "/home/pawel/projects/maces-game/maces-game.el") . 1) ((:keyword "defface") . 1) (emacs-lisp-mode . 1) (nil . 1)) "font-lock-constant-face" (((:file "/home/pawel/projects/maces-game/maces-game.el") . 1) ((:keyword "defface") . 1) (emacs-lisp-mode . 1) (nil . 1)) "font-lock-builtin-face" (((:file "/home/pawel/projects/maces-game/maces-game.el") . 1) ((:keyword "defface") . 1) (emacs-lisp-mode . 1) (nil . 1)) "font-lock-doc-face" (((:file "/home/pawel/projects/maces-game/maces-game.el") . 1) ((:keyword "defface") . 1) (emacs-lisp-mode . 1) (nil . 1)) "face-attribute" (((:keyword "require") . 2) (lisp-interaction-mode . 2) (nil . 2)) "face-foreground" (((:keyword "require") . 1) (lisp-interaction-mode . 1) (nil . 1)) "font-lock-warning-face" (((:file "/home/pawel/projects/maces-game/maces-game.el") . 1) ((:keyword "defface") . 1) (emacs-lisp-mode . 1) (nil . 1)) "dev-client.ovpn" (((:file "/home/pawel/.bashrc") . 1) ((:keyword "fi") . 1) (sh-mode . 1) (nil . 1)) "ivy-toggle-fuzzy" (((:keyword "setq") . 1) (lisp-interaction-mode . 1) (nil . 1)) "counsel" (((:file "/home/pawel/.emacs.d/lisp/init-ivy.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "listenfirst" (((:file "/home/pawel/.pgpass") . 2) ((:symbol "db") . 2) (fundamental-mode . 2) (nil . 2)) "devvpn" (((:file "/home/pawel/.pgpass") . 1) ((:symbol "nil") . 1) (fundamental-mode . 1) (nil . 1)) "counsel-projectile-on" (((:file "/home/pawel/.emacs.d/lisp/init-projectile.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "erc-spelling-mode" (((:file "/home/pawel/.emacs.d/lisp/init-erc.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "git-commit-mode-hook" (((:file "/home/pawel/.emacs.d/lisp/init-flyspell.el") . 1) ((:keyword "after-load") . 1) (emacs-lisp-mode . 1) (nil . 1)) "VALUES" ((ruby-mode . 1) (nil . 1)) "better" ((ruby-mode . 1) (nil . 1)) "~/.bash_history" ((ruby-mode . 1) (nil . 1)) "input_map" (((:keyword "if") . 1) (ruby-mode . 1) (nil . 1)) "partial_matches" (((:keyword "do") . 1) (ruby-mode . 3) (nil . 3) ((:keyword "if") . 2)) "curr_partial_match" (((:keyword "if") . 7) (ruby-mode . 9) (nil . 9) ((:keyword "else") . 2)) "prev_partial_match" (((:keyword "if") . 4) (ruby-mode . 6) (nil . 6) ((:keyword "else") . 1) ((:keyword "do") . 1)) ":name" ((inf-ruby-mode . 1) (nil . 1)) "MatchData" ((inf-ruby-mode . 1) (nil . 1)) "x.idx" ((inf-ruby-mode . 1) (nil . 1)) "char_idx" (((:keyword "if") . 2) (ruby-mode . 2) (nil . 2)) "4].max" ((inf-ruby-mode . 1) (nil . 1)) "each_with_object" (((:symbol "nil") . 1) ((:keyword "do") . 1) (ruby-mode . 1) (nil . 1)) "f-directories" (((:file "/home/pawel/.emacs.d/lisp/init-org.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "after-load" (((:file "/home/pawel/.emacs.d/lisp/init-org.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "add-auto-mode" (((:file "/home/pawel/.emacs.d/lisp/init-javascript.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "constructor" (((:file "/home/pawel/projects/mma-stats/src/main.js") . 1) ((:keyword "class") . 1) (js2-mode . 1) (nil . 1)) "Component" (((:file "/home/pawel/projects/mma-stats/src/main.js") . 2) ((:symbol "React") . 1) ((:keyword "extends") . 1) (js2-mode . 2) (nil . 2) ((:keyword "import") . 1)) "fetchFights" (((:file "/home/pawel/projects/mma-stats/scraper/scrape.js") . 6) ((:keyword "await") . 1) (js2-mode . 6) (nil . 6) ((:keyword "return") . 5)) "htmlparser" (((:file "/home/pawel/projects/mma-stats/scraper/scrape.js") . 2) ((:keyword "const") . 2) (js2-mode . 2) (nil . 2)) "counsel-projectile" (((:file "/home/pawel/.emacs.d/lisp/init-projectile.el") . 1) ((:keyword "after-load") . 1) (emacs-lisp-mode . 1) (nil . 1)) "fightsTable" (((:file "/home/pawel/projects/mma-stats/scraper/scrape.js") . 1) ((:keyword "const") . 1) (js2-mode . 1) (nil . 1)) "depthLevel" (((:file "/home/pawel/projects/mma-stats/scraper/scrape.js") . 3) ((:keyword "function") . 2) (js2-mode . 3) (nil . 3) ((:keyword "if") . 1)) "newFights" (((:file "/home/pawel/projects/mma-stats/scraper/scrape.js") . 2) ((:keyword "return") . 1) (js2-mode . 2) (nil . 2) ((:keyword "await") . 1)) "linkedFights" (((:file "/home/pawel/projects/mma-stats/scraper/scrape.js") . 3) ((:keyword "return") . 1) (js2-mode . 3) (nil . 3) ((:keyword "await") . 2)) "isEmpty" (((:file "/home/pawel/projects/mma-stats/scraper/scrape.js") . 1) ((:symbol "_") . 1) ((:keyword "await") . 1) (js2-mode . 1) (nil . 1)) "fightVals" (((:file "/home/pawel/projects/mma-stats/scraper/scrape.js") . 1) ((:keyword "return") . 1) (js2-mode . 1) (nil . 1)) "nextAll" (((:file "/home/pawel/projects/mma-stats/scraper/scrape.js") . 1) ((:symbol "nil") . 1) ((:keyword "const") . 1) (js2-mode . 1) (nil . 1)) "bigint" (((:file "/home/pawel/projects/mma-stats/db/mma_stats.sql") . 1) ((:keyword "TABLE") . 1) (sql-mode . 1) (nil . 1)) "loopDate" (((:file "/home/pawel/projects/mma-stats/db/mma_stats.sql") . 1) ((:keyword "BEGIN") . 1) (sql-mode . 1) (nil . 1)) "endDate" (((:file "/home/pawel/projects/mma-stats/db/mma_stats.sql") . 1) ((:keyword "BEGIN") . 1) (sql-mode . 1) (nil . 2) ((:file "/home/pawel/projects/mma-stats/server/db/seed.js") . 1) ((:keyword "const") . 1) (js2-mode . 1)) "DateTime" (((:file "/home/pawel/projects/mma-stats/server/db/seed.js") . 3) ((:symbol "luxon") . 1) ((:keyword "const") . 3) (js2-mode . 3) (nil . 3)) "fromFormat" (((:file "/home/pawel/projects/mma-stats/server/db/seed.js") . 1) ((:symbol "DateTime") . 1) ((:keyword "const") . 1) (js2-mode . 1) (nil . 1)) "Interval" (((:file "/home/pawel/projects/mma-stats/server/db/seed.js") . 1) ((:keyword "const") . 1) (js2-mode . 1) (nil . 1)) "startDate" (((:file "/home/pawel/projects/mma-stats/server/db/seed.js") . 3) ((:keyword "const") . 3) (js2-mode . 3) (nil . 3)) "granularity" (((:file "/home/pawel/projects/work/tiles/twitter-conversation-analyzer/src/tc/Chart.js") . 8) ((:keyword "const") . 5) (js2-mode . 2) (nil . 8) (rjsx-mode . 6) ((:keyword "return") . 2) ((:keyword "if") . 1)) "function" (((:file "/home/pawel/projects/mma-stats/scraper/ufc_scraper.js") . 1) ((:keyword "function") . 1) (js2-mode . 1) (nil . 1)) "twitter_report_search_terms" (((:file "/home/pawel/projects/work/dsp/api/spec/models/twitter_report_spec.rb") . 1) ((:keyword "do") . 1) (ruby-mode . 3) (nil . 3) ((:file "/home/pawel/projects/work/cms/db/migrate/20180425020650_reindex_twitter_search_terms.rb") . 2) ((:keyword "def") . 2)) "actual_search_term" (((:file "/home/pawel/projects/work/dsp/api/spec/models/twitter_report_spec.rb") . 1) ((:keyword "do") . 1) (ruby-mode . 1) (nil . 1)) "verbatims" (((:file "/home/pawel/projects/work/dsp/api/spec/models/twitter_report_spec.rb") . 1) ((:symbol "actual_search_term") . 1) ((:keyword "do") . 1) (ruby-mode . 1) (nil . 1)) "Conversions" (((:file "/home/pawel/projects/work/dcr/data-channels/dart/dca.spec") . 1) ((:symbol "campaign") . 1) (yaml-mode . 1) (nil . 1)) "Through" (((:file "/home/pawel/projects/work/dsp/api/config/story_templates/dart_tabs_template.yaml") . 1) (yaml-mode . 1) (nil . 1)) "unique" (((:file "/home/pawel/projects/work/cms/db/migrate/20180425020650_reindex_twitter_search_terms.rb") . 1) ((:keyword "def") . 1) (ruby-mode . 2) (nil . 2) ((:file "/home/pawel/projects/work/cms/db/migrate/20180821142454_create_activity_permissions.rb") . 1) ((:keyword "end") . 1)) "Verified" (((:file "/home/pawel/projects/work/tiles/twitter-conversation-analyzer/src/tc/TweetTable.js") . 1) ((:keyword "const") . 1) (js2-mode . 1) (nil . 1)) "verified" (((:file "/home/pawel/projects/work/tiles/twitter-conversation-analyzer/src/tc/TweetTable.js") . 1) ((:symbol "handle") . 1) ((:keyword "return") . 1) (js2-mode . 1) (nil . 1)) "StandardError" (((:file "/home/pawel/projects/work/dsp/api/app/models/twitter_report_search_term.rb") . 1) ((:keyword "rescue") . 1) (ruby-mode . 1) (nil . 1)) "camera" (((:file "/home/pawel/projects/space/src/mapper.coffee") . 1) ((:symbol "game") . 1) ((:keyword "when") . 1) (coffee-mode . 1) (nil . 1)) "clean_query" (((:file "/home/pawel/projects/work/dsp/api/app/models/twitter_report.rb") . 1) ((:keyword "if") . 1) (ruby-mode . 1) (nil . 1)) "max-width" (((:file "/home/pawel/projects/work/tiles/twitter-conversation-analyzer/src/_dim_tooltip.scss") . 1) (scss-mode . 1) (nil . 1)) "seedEvent" (((:file "/home/pawel/projects/mma-stats/scraper/ufc_scraper.js") . 1) ((:keyword "const") . 1) (js2-mode . 1) (nil . 1)) "getEventDimentions" (((:file "/home/pawel/projects/mma-stats/scraper/ufc_scraper.js") . 1) ((:keyword "const") . 1) (js2-mode . 1) (nil . 1)) "writeEventDimensions" (((:file "/home/pawel/projects/mma-stats/scraper/ufc_scraper.js") . 1) ((:keyword "const") . 1) (js2-mode . 1) (nil . 1)) "dimentsions" (((:file "/home/pawel/projects/mma-stats/scraper/ufc_scraper.js") . 1) ((:keyword "const") . 1) (js2-mode . 1) (nil . 1)) "infoBoxHTML" (((:file "/home/pawel/projects/mma-stats/scraper/ufc_scraper.js") . 3) ((:keyword "const") . 3) (js2-mode . 3) (nil . 3)) "nextEvent" (((:file "/home/pawel/projects/mma-stats/scraper/ufc_scraper.js") . 2) ((:keyword "const") . 2) (js2-mode . 2) (nil . 2)) "eventName" (((:file "/home/pawel/projects/mma-stats/scraper/ufc_scraper.js") . 1) ((:keyword "const") . 1) (js2-mode . 1) (nil . 1)) "nextEventLink" (((:file "/home/pawel/projects/mma-stats/scraper/ufc_scraper.js") . 1) ((:keyword "return") . 1) (js2-mode . 1) (nil . 1)) "KEYWORDS" (((:file "/home/pawel/projects/sql-parser/lexer.rb") . 1) ((:keyword "END") . 1) (ruby-mode . 1) (nil . 1)) "getEventData" (((:file "/home/pawel/projects/mma-stats/scraper/ufc_scraper.js") . 1) ((:keyword "const") . 1) (js2-mode . 1) (nil . 1)) "fetchEvents" (((:file "/home/pawel/projects/mma-stats/scraper/ufc_scraper.js") . 1) ((:keyword "try") . 1) (js2-mode . 1) (nil . 1)) "spacemacs-dark-theme" (((:file "/home/pawel/.emacs.d/init.el") . 1) ((:keyword "setq-default") . 1) (emacs-lisp-mode . 1) (nil . 1)) "spacemacs-dark" (((:file "/home/pawel/projects/emacs-theme-gallery/elisp/emacsThemes.el") . 1) ((:keyword "let") . 1) (emacs-lisp-mode . 1) (nil . 1)) "spacemacs" (((:file "/home/pawel/projects/emacs-theme-gallery/elisp/emacsThemes.el") . 1) ((:keyword "let") . 1) (emacs-lisp-mode . 1) (nil . 2) ((:file "/home/pawel/projects/emacs-theme-gallery/scripts/themeProperties.js") . 1) ((:keyword "var") . 1) (js2-mode . 1)) "activity_permissions" (((:file "/home/pawel/projects/work/cms/db/migrate/20180821142454_create_activity_permissions.rb") . 2) ((:keyword "end") . 2) (ruby-mode . 2) (nil . 2)) "features" (((:file "/home/pawel/projects/work/cms/db/migrate/20180821142454_create_activity_permissions.rb") . 1) ((:keyword "end") . 1) (ruby-mode . 1) (nil . 1)) "feature_id" (((:file "/home/pawel/projects/work/cms/db/migrate/20180821142454_create_activity_permissions.rb") . 1) ((:keyword "end") . 1) (ruby-mode . 1) (nil . 1)) "retrieves" (((:file "/home/pawel/projects/work/dsp/api/spec/models/score_spec.rb") . 1) ((:keyword "do") . 1) (ruby-mode . 1) (nil . 1)) "OpenStruct" (((:file "/home/pawel/projects/work/dsp/api/spec/models/score_spec.rb") . 1) ((:keyword "do") . 1) (ruby-mode . 1) (nil . 1)) "tile" ((fundamental-mode . 2) (nil . 2)))) company-statistics--log [("contents" (nil . 1) (ruby-mode . 1) ((:keyword "self") . 1) ((:symbol "nil") . 1) ((:file "/home/pawel/projects/sql-parser/lexer.rb") . 1)) ("tokenize" (nil . 1) (ruby-mode . 1) ((:keyword "end") . 1) ((:file "/home/pawel/projects/sql-parser/lexer.rb") . 1)) ("nil" (nil . 1) (ruby-mode . 1) ((:keyword "when") . 1) ((:file "/home/pawel/projects/sql-parser/lexer.rb") . 1)) ("attr_reader" (nil . 4) (ruby-mode . 4) ((:keyword "class") . 4) ((:file "/home/pawel/projects/sql-parser/lexer.rb") . 4)) ("next_char" (nil . 1) (ruby-mode . 1) ((:keyword "self") . 1) ((:file "/home/pawel/projects/sql-parser/lexer.rb") . 1)) ("next_char" (nil . 1) (ruby-mode . 1) ((:keyword "when") . 2) ((:file "/home/pawel/projects/sql-parser/lexer.rb") . 1)) ("rescue" (nil . 1) (ruby-mode . 1) ((:keyword "self") . 1) ((:file "/home/pawel/projects/sql-parser/lexer.rb") . 1)) ("attr_reader" (nil . 1) (ruby-mode . 1) ((:keyword "class") . 1) ((:file "/home/pawel/projects/sql-parser/lexer.rb") . 1)) ("Keyword" (nil . 1) (ruby-mode . 1) ((:keyword "class") . 1) ((:file "/home/pawel/projects/sql-parser/lexer.rb") . 1)) ("initialize" (nil . 1) (ruby-mode . 1) ((:keyword "def") . 1) ((:file "/home/pawel/projects/sql-parser/lexer.rb") . 1)) ("attr_reader" (nil . 1) (ruby-mode . 1) ((:keyword "class") . 1) ((:file "/home/pawel/projects/sql-parser/lexer.rb") . 1)) (":type" (nil . 1) (ruby-mode . 1) ((:keyword "class") . 1) ((:file "/home/pawel/projects/sql-parser/lexer.rb") . 1)) ("attr_reader" (nil . 1) (ruby-mode . 1) ((:keyword "class") . 1) ((:file "/home/pawel/projects/sql-parser/lexer.rb") . 1)) ("initialize" (nil . 1) (ruby-mode . 1) ((:keyword "def") . 1) ((:file "/home/pawel/projects/sql-parser/lexer.rb") . 1)) (":QUOTED_IDENTIFIER" (nil . 1) (ruby-mode . 1) ((:keyword "def") . 1) ((:file "/home/pawel/projects/sql-parser/lexer.rb") . 1)) ("keyword_or_identifier" (nil . 1) (ruby-mode . 1) ((:keyword "self") . 1) ((:file "/home/pawel/projects/sql-parser/lexer.rb") . 1)) ("alphabet" (nil . 1) (ruby-mode . 1) ((:keyword "self") . 1) ((:file "/home/pawel/projects/sql-parser/lexer.rb") . 1)) ("complete_word" (nil . 1) (ruby-mode . 1) ((:keyword "self") . 1) ((:file "/home/pawel/projects/sql-parser/lexer.rb") . 1)) ("alphabet" (nil . 1) (ruby-mode . 1) ((:keyword "self") . 1) ((:symbol "nil") . 1) ((:file "/home/pawel/projects/sql-parser/lexer.rb") . 1)) ("QuotedIdentifier" (nil . 1) (ruby-mode . 1) ((:keyword "if") . 1) ((:file "/home/pawel/projects/sql-parser/lexer.rb") . 1)) ("next_char" (nil . 1) (ruby-mode . 1) ((:keyword "if") . 1) ((:file "/home/pawel/projects/sql-parser/lexer.rb") . 1)) ("quotedIdent" (nil . 1) (ruby-mode . 1) ((:keyword "return") . 1) ((:file "/home/pawel/projects/sql-parser/lexer.rb") . 1)) ("quoted_identifier" (nil . 1) (ruby-mode . 1) ((:keyword "return") . 1) ((:file "/home/pawel/projects/sql-parser/lexer.rb") . 1)) ("next_char" (nil . 1) (ruby-mode . 1) ((:keyword "when") . 1) ((:file "/home/pawel/projects/sql-parser/lexer.rb") . 1)) ("next_char" (nil . 1) (ruby-mode . 1) ((:keyword "def") . 1) ((:file "/home/pawel/projects/sql-parser/parser.rb") . 1)) ("curr_token" (nil . 2) (ruby-mode . 2) ((:keyword "def") . 2) ((:symbol "nil") . 2) ((:file "/home/pawel/projects/sql-parser/parser.rb") . 2)) ("curr_token" (nil . 1) (ruby-mode . 1) ((:keyword "def") . 1) ((:symbol "nil") . 1) ((:file "/home/pawel/projects/sql-parser/parser.rb") . 1)) ("Keyword" (nil . 1) (ruby-mode . 1) ((:keyword "def") . 1) ((:file "/home/pawel/projects/sql-parser/parser.rb") . 1)) ("NULL" (nil . 1) (fundamental-mode . 1)) ("badlogic" (nil . 2) (java-mode . 2) ((:keyword "import") . 2) ((:symbol "com") . 2) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 2)) ("FitViewport" (nil . 2) (java-mode . 1) ((:keyword "import") . 1) ((:symbol "viewport") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 1)) ("@Override" (nil . 1) (java-mode . 1) ((:keyword "public") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 1)) ("viewport" (nil . 1) (java-mode . 1) ((:keyword "public") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 1)) ("FitViewport" (nil . 1) (text-mode . 1) ((:file "/home/pawel/projects/space-warrior/.git/COMMIT_EDITMSG") . 1)) ("badlogic" (nil . 1) (java-mode . 1) ((:keyword "import") . 1) ((:symbol "com") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 1)) ("graphics" (nil . 1) (java-mode . 1) ((:keyword "import") . 1) ((:symbol "gdx") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 1)) ("shapeRenderer" (nil . 12) (java-mode . 12) ((:keyword "new") . 2) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 4)) ("ShapeRenderer" (nil . 3) (java-mode . 3) ((:keyword "new") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 2)) ("ShapeRenderer" (nil . 1) (java-mode . 1) ((:keyword "private") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 1)) ("shapeRenderer" (nil . 1) (java-mode . 1) ((:keyword "private") . 2) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 1)) ("OrthographicCamera" (nil . 1) (java-mode . 1) ((:keyword "new") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 1)) ("handleInput" (nil . 1) (java-mode . 1) ((:keyword "private") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 1)) ("shapeRenderer" (nil . 1) (java-mode . 1) ((:keyword "public") . 5) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 1)) ("Spacecraft" (nil . 5) (java-mode . 4) ((:keyword "class") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/Spacecraft.java") . 1)) ("ShapeRenderer" (nil . 1) (java-mode . 1) ((:keyword "class") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/Spacecraft.java") . 1)) ("shapeRenderer" (nil . 1) (java-mode . 1) ((:keyword "class") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/Spacecraft.java") . 8)) ("shapeRenderer" (nil . 1) (java-mode . 1) ((:keyword "this") . 2) ((:symbol "this") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/Spacecraft.java") . 1)) ("shapeRenderer" (nil . 1) (java-mode . 1) ((:keyword "this") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/Spacecraft.java") . 1)) ("shapeRenderer" (nil . 1) (java-mode . 1) ((:keyword "private") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/Spacecraft.java") . 1)) ("consequences" (nil . 1) (fundamental-mode . 1)) ("shapeRenderer" (nil . 1) (java-mode . 1) ((:keyword "public") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/Spacecraft.java") . 1)) ("ShapeType" (nil . 1) (java-mode . 1) ((:keyword "public") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/Spacecraft.java") . 1)) ("shapeRenderer" (nil . 1) (java-mode . 1) ((:keyword "public") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/Spacecraft.java") . 1)) ("shapeRenderer" (nil . 1) (java-mode . 1) ((:keyword "public") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/Spacecraft.java") . 1)) ("shapeRenderer" (nil . 1) (java-mode . 1) ((:keyword "public") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/Spacecraft.java") . 1)) ("Spacecraft" (nil . 1) (java-mode . 1) ((:keyword "new") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 3)) ("shapeRenderer" (nil . 1) (java-mode . 1) ((:keyword "new") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 1)) ("Vector2" (nil . 1) (java-mode . 1) ((:keyword "new") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 1)) ("spacecraft" (nil . 3) (java-mode . 3) ((:keyword "public") . 2) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 3)) ("spacecraft" (nil . 1) (java-mode . 1) ((:keyword "public") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 1)) ("update" (nil . 1) (java-mode . 1) ((:keyword "public") . 1) ((:symbol "spacecraft") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 1)) ("Spacecraft" (nil . 1) (java-mode . 1) ((:keyword "private") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 1)) ("spacecraft" (nil . 1) (java-mode . 1) ((:keyword "private") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 1)) ("Spacecraft" (nil . 1) (java-mode . 1) ((:keyword "import") . 1) ((:symbol "main") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 1)) ("Spacecraft" (nil . 1) (text-mode . 1) ((:file "/home/pawel/projects/space-warrior/.git/COMMIT_EDITMSG") . 1)) ("c-basic-common-init" (nil . 1) (lisp-interaction-mode . 1)) ("defvaralias" (nil . 3) (emacs-lisp-mode . 3) ((:keyword "require") . 2) ((:file "/home/pawel/.emacs.d/init.el") . 3)) ("c-basic-offset" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defvaralias") . 1) ((:file "/home/pawel/.emacs.d/init.el") . 1)) ("tab-width" (nil . 3) (emacs-lisp-mode . 3) ((:keyword "defvaralias") . 3) ((:file "/home/pawel/.emacs.d/init.el") . 3)) ("defvaralias" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defvaralias") . 1) ((:file "/home/pawel/.emacs.d/init.el") . 1)) ("defvaralias" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "/home/pawel/.emacs.d/init.el") . 1)) ("js-indent-level" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defvaralias") . 1) ((:file "/home/pawel/.emacs.d/init.el") . 1)) ("tab-width" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defvaralias") . 1) ((:file "/home/pawel/.emacs.d/init.el") . 1)) ("tab-width" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defvaralias") . 1) ((:file "/home/pawel/.emacs.d/init.el") . 1)) ("defun" (nil . 2) (lisp-interaction-mode . 2)) ("defun" (nil . 1) (lisp-interaction-mode . 1)) ("interactive" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1) ((:file "/home/pawel/projects/home-scripts/stale-downloads.el") . 1)) ("file-attributes" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "lambda") . 1) ((:file "/home/pawel/projects/home-scripts/stale-downloads.el") . 1)) ("float-time" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "require") . 1)) ("current-time-string" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "require") . 1)) ("time-subtract" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "require") . 1)) ("time-to-days" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "require") . 1)) ("time-to-seconds" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "require") . 1)) ("seconds-to-time" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "require") . 1)) ("current-time-string" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "lambda") . 1)) ("date-to-time" (nil . 3) (lisp-interaction-mode . 2) ((:keyword "lambda") . 3)) ("time-subtract" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "lambda") . 2)) ("date-to-time" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "lambda") . 1)) ("float-time" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "lambda") . 2)) ("time-subtract" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "lambda") . 1) ((:file "/home/pawel/projects/home-scripts/stale-downloads.el") . 1)) ("date-to-time" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "lambda") . 1) ((:file "/home/pawel/projects/home-scripts/stale-downloads.el") . 1)) ("current-time" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "lambda") . 1) ((:file "/home/pawel/projects/home-scripts/stale-downloads.el") . 1)) ("float-time" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "lambda") . 1) ((:file "/home/pawel/projects/home-scripts/stale-downloads.el") . 1)) ("stale-downloads" (nil . 5) (lisp-interaction-mode . 5) ((:keyword "lambda") . 3)) ("stale-downloads" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "lambda") . 1)) ("stale-downloads" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "lambda") . 1)) ("stale-downloads" (nil . 1) (lisp-interaction-mode . 1)) ("stale-downloads" (nil . 1) (lisp-interaction-mode . 1)) ("Keyword" (nil . 1) (ruby-mode . 1) ((:keyword "if") . 1) ((:file "/home/pawel/projects/sql-parser/parser.rb") . 1)) ("Vector2" (nil . 1) (java-mode . 1) ((:keyword "private") . 2) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/Spacecraft.java") . 2)) ("Vector2" (nil . 1) (java-mode . 1) ((:keyword "private") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/Spacecraft.java") . 1)) ("shapeRenderer" (nil . 1) (java-mode . 1) ((:keyword "public") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/Spacecraft.java") . 1)) ("Vector2" (nil . 1) (java-mode . 1) ((:keyword "new") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 1)) ("bodyDef" (nil . 4) (java-mode . 4) ((:keyword "this") . 4) ((:symbol "this") . 3) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/Spacecraft.java") . 4)) ("BodyDef" (nil . 1) (java-mode . 1) ((:keyword "new") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/Spacecraft.java") . 1)) ("bodyDef" (nil . 1) (java-mode . 1) ((:keyword "this") . 1) ((:symbol "this") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/Spacecraft.java") . 1)) ("bodyDef" (nil . 1) (java-mode . 1) ((:keyword "this") . 1) ((:symbol "this") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/Spacecraft.java") . 1)) ("bodyDef" (nil . 1) (java-mode . 1) ((:keyword "this") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/Spacecraft.java") . 1)) ("badlogic" (nil . 1) (java-mode . 1) ((:keyword "import") . 1) ((:symbol "com") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 1)) ("worldHeight" (nil . 2) (java-mode . 2) ((:keyword "new") . 2) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 2)) ("worldWidth" (nil . 1) (java-mode . 1) ((:keyword "new") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 1)) ("worldHeight" (nil . 1) (java-mode . 1) ((:keyword "new") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 1)) ("viewport" (nil . 1) (java-mode . 1) ((:keyword "new") . 2) ((:symbol "camera") . 2) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 1)) ("viewport" (nil . 1) (java-mode . 1) ((:keyword "new") . 1) ((:symbol "camera") . 1) ((:file "/home/pawel/projects/space-warrior/core/src/com/main/SpaceWarrior.java") . 1)) ("sayHello" (nil . 3) (intero-repl-mode . 3)) ("sayHello" (nil . 1) (intero-repl-mode . 1)) ("triple" (nil . 3) (intero-repl-mode . 2)) ("sayHello" (nil . 1) (intero-repl-mode . 1)) ("triple" (nil . 1) (intero-repl-mode . 1)) ("triple" (nil . 1) (haskell-mode . 1) ((:file "/home/pawel/projects/haskell/haskell-programming-first-principles/chapter-2/test.hs") . 1)) ("waxOff" (nil . 1) (intero-repl-mode . 1)) ("waxOn" (nil . 1) (intero-repl-mode . 1)) ("sorted-word-map" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "lambda") . 1)) ("str-contains?" (nil . 3) (lisp-interaction-mode . 3) ((:keyword "lambda") . 2)) ("str-contains?" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "lambda") . 1)) ("char-to-string" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "lambda") . 1)) ("generate-anagram" (nil . 6) (lisp-interaction-mode . 2) ((:keyword "lambda") . 3)) ("generate-anagram" (nil . 1) (emacs-lisp-mode . 4) ((:keyword "lambda") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 4)) ("generate-anagram" (nil . 1) (lisp-interaction-mode . 1)) ("length" (nil . 2) (lisp-interaction-mode . 1) ((:keyword "lambda") . 1)) ("copy-sequence" (nil . 2) (lisp-interaction-mode . 2) ((:keyword "defun") . 1)) ("copy-sequence" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "let") . 1)) ("nthcdr" (nil . 8) (lisp-interaction-mode . 3) ((:keyword "let") . 3)) ("shuff-list" (nil . 2) (lisp-interaction-mode . 2) ((:keyword "lambda") . 1)) ("shuff-list" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "let") . 1)) ("nthcdr" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "let") . 1)) ("dotimes" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "let") . 1)) ("shuffle" (nil . 2) (lisp-interaction-mode . 2) ((:keyword "let") . 2)) ("shuffle" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "let") . 1)) ("make-hash-table" (nil . 2) (lisp-interaction-mode . 1) ((:keyword "let") . 2)) ("gethash" (nil . 2) (lisp-interaction-mode . 1) ((:keyword "if") . 1)) ("freq-table" (nil . 5) (lisp-interaction-mode . 5) ((:keyword "if") . 5)) ("puthash" (nil . 3) (lisp-interaction-mode . 2) ((:keyword "if") . 3)) ("puthash" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "if") . 1)) ("freq-table" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "if") . 1)) ("freq-table" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "if") . 1)) ("lambda" (nil . 3) (lisp-interaction-mode . 2) ((:keyword "if") . 2)) ("hash-table-values" (nil . 2) (lisp-interaction-mode . 2) ((:keyword "lambda") . 1)) ("hash-table-values" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "if") . 1)) ("freq-table" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "if") . 1)) ("freq-table" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "if") . 1)) ("lambda" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "if") . 1)) ("length" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("valid-words" (nil . 3) (emacs-lisp-mode . 3) ((:keyword "let") . 3) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 3)) ("valid-words" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("valid-words" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("generate-anagram" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "lambda") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("norm-words" (nil . 2) (emacs-lisp-mode . 1) ((:keyword "lambda") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("interactive" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("switch-to-buffer" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("generate-anagram" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("generate-anagram" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("define-derived-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("anagram" (nil . 4) (emacs-lisp-mode . 4) ((:keyword "defun") . 3) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 4)) ("inhibit-read-only" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("erase-buffer" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "let") . 2) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("anagram" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("print-anagram-letters" (nil . 4) (emacs-lisp-mode . 4) ((:keyword "defun") . 2) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 4)) ("define-key" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "define-derived-mode") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("shuffle-anagram-letters" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "define-derived-mode") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("anagram" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "define-derived-mode") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("lambda" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("insert-char" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "if") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("lexical-binding" (nil . 1) (emacs-lisp-mode . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("nthcdr" (nil . 1) (emacs-lisp-mode . 5) ((:keyword "if") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 5)) ("current-anagram" (nil . 9) (emacs-lisp-mode . 8) ((:keyword "if") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 8)) ("print-anagram-letters" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "when") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("current-anagram" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 3) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("str-contains?" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "let") . 1)) ("substring" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("current-anagram" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 4) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("delete-anagram-letter" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("print-anagram-letters" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("current-anagram" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("current-anagram" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("nthcdr" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 3) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("current-anagram" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("current-anagram" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("print-anagram-letters" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "if") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("anagram-set-msg" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "if") . 2) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 2)) ("nthcdr" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("anagram-state" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "defun") . 2) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 2)) ("nthcdr" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "cond") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("current-anagram" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("anagram-get-points" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("member" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "if") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("anagram-set-msg" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "if") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("anagram" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("add-to-list" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("anagram-get-found" (nil . 3) (emacs-lisp-mode . 3) ((:keyword "defun") . 2) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 3)) ("anagram-get-found" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("anagram-get-found" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("nthcdr" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "let") . 1)) ("nthcdr" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("anagram-state" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("propertize" (nil . 3) (emacs-lisp-mode . 3) ((:keyword "let") . 3) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 3)) ("set-face-attribute" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defvar") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) (":foreground" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defface") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("propertize" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("anagram-guess-face" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("propertize" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("face-spec-set" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defface") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("anagram-message-face" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defface") . 1) ((:file "/home/pawel/projects/scrap/anagram-generator/anagram_gen.el") . 1)) ("norm-words" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "with-temp-file") . 1)) ("make-hash-table" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/pawel/projects/anagram-game/anagram-game.el") . 1)) ("gethash" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let*") . 1) ((:file "/home/pawel/projects/anagram-game/anagram-game.el") . 1)) ("norm-word" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let*") . 1) ((:file "/home/pawel/projects/anagram-game/anagram-game.el") . 1)) ("curr-words" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "let*") . 1) ((:file "/home/pawel/projects/anagram-game/anagram-game.el") . 2)) ("puthash" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "if") . 1) ((:file "/home/pawel/projects/anagram-game/anagram-game.el") . 1)) ("curr-words" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "if") . 1) ((:file "/home/pawel/projects/anagram-game/anagram-game.el") . 1)) ("-intersection" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "lambda") . 1) ((:file "/home/pawel/projects/anagram-game/anagram-game.el") . 1)) ("curr-word" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "lambda") . 1) ((:file "/home/pawel/projects/anagram-game/anagram-game.el") . 1)) ("delete-dups" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "lambda") . 1) ((:file "/home/pawel/projects/anagram-game/anagram-game.el") . 1)) ("current-anagram" (nil . 1) (lisp-interaction-mode . 1)) ("erase-buffer" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/pawel/projects/anagram-game/anagram-game.el") . 1)) ("redraw-frame" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/pawel/projects/anagram-game/anagram-game.el") . 1)) ("cl-coerce" (nil . 1) (lisp-interaction-mode . 1)) ("redisplay" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/pawel/projects/anagram-game/anagram-game.el") . 1)) ("inhibit-read-only" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/pawel/projects/anagram-game/anagram-game.el") . 1)) ("erase-buffer" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/pawel/projects/anagram-game/anagram-game.el") . 1)) ("charset" (nil . 1) (html-mode . 1) ((:keyword "!DOCTYPE") . 1) ((:file "/home/pawel/projects/pawelbx.github.io/index.html") . 1)) ("Acknowledgements" (nil . 2) (fundamental-mode . 1) ((:file "/home/pawel/projects/maces-game/README.md") . 1)) ("Emacs" (nil . 1) (fundamental-mode . 1) ((:file "/home/pawel/projects/maces-game/README.md") . 1)) ("Acknowledgements" (nil . 1) (text-mode . 1) ((:file "/home/pawel/projects/maces-game/.git/COMMIT_EDITMSG") . 1)) ("screenshot" (nil . 1) (fundamental-mode . 1) ((:file "/home/pawel/projects/maces-game/README.md") . 1)) ("file-name-directory" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "with-current-buffer") . 1) ((:file "/home/pawel/projects/maces-game/maces-game.el") . 1)) ("Pawel" (nil . 1) (text-mode . 1)) ("client_socket" (nil . 4) (ruby-mode . 4) ((:keyword "end") . 1) ((:file "/home/pawel/projects/scrap/http-server/servant.rb") . 4)) ("client_socket" (nil . 1) (ruby-mode . 1) ((:keyword "do") . 3) ((:file "/home/pawel/projects/scrap/http-server/servant.rb") . 1)) ("client_socket" (nil . 1) (ruby-mode . 1) ((:keyword "do") . 1) ((:file "/home/pawel/projects/scrap/http-server/servant.rb") . 1)) ("client_socket" (nil . 1) (ruby-mode . 1) ((:keyword "do") . 1) ((:symbol "nil") . 1) ((:file "/home/pawel/projects/scrap/http-server/servant.rb") . 1)) ("client_addrinfo" (nil . 1) (ruby-mode . 1) ((:keyword "do") . 1) ((:file "/home/pawel/projects/scrap/http-server/servant.rb") . 1)) ("server_header" (nil . 1) (ruby-mode . 1) ((:keyword "end") . 1) ((:file "/home/pawel/projects/scrap/http-server/servant.rb") . 1)) ("OptionParser" (nil . 1) (ruby-mode . 1) ((:keyword "end") . 1) ((:file "/home/pawel/projects/scrap/http-server/servant.rb") . 1)) ("IOError" (nil . 1) (ruby-mode . 1) ((:keyword "unless") . 1) ((:file "/home/pawel/projects/scrap/http-server/servant.rb") . 1)) ("socket_listen" (nil . 1) (ruby-mode . 1) ((:keyword "begin") . 1) ((:file "/home/pawel/projects/scrap/http-server/servant.rb") . 1)) ("helm-build-sync-source" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "require") . 1)) (":inherit" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "defface") . 2) ((:file "/home/pawel/projects/maces-game/maces-game.el") . 2)) ("font-lock-keyword-face" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defface") . 1) ((:file "/home/pawel/projects/maces-game/maces-game.el") . 1)) ("font-lock-constant-face" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defface") . 1) ((:file "/home/pawel/projects/maces-game/maces-game.el") . 1)) ("font-lock-builtin-face" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defface") . 1) ((:file "/home/pawel/projects/maces-game/maces-game.el") . 1)) (":inherit" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defface") . 1) ((:file "/home/pawel/projects/maces-game/maces-game.el") . 1)) ("font-lock-doc-face" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defface") . 1) ((:file "/home/pawel/projects/maces-game/maces-game.el") . 1)) ("face-attribute" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "require") . 1)) ("face-foreground" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "require") . 1)) ("cl-coerce" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "require") . 1)) ("face-attribute" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "require") . 1)) (":foreground" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "require") . 1)) ("font-lock-warning-face" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defface") . 1) ((:file "/home/pawel/projects/maces-game/maces-game.el") . 1)) ("dev-client.ovpn" (nil . 1) (sh-mode . 1) ((:keyword "fi") . 1) ((:file "/home/pawel/.bashrc") . 1)) ("ivy-toggle-fuzzy" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "setq") . 1)) ("require-package" (nil . 1) (emacs-lisp-mode . 1) ((:file "/home/pawel/.emacs.d/lisp/init-ivy.el") . 2)) ("require-package" (nil . 1) (emacs-lisp-mode . 1) ((:file "/home/pawel/.emacs.d/lisp/init-ivy.el") . 1)) ("counsel" (nil . 1) (emacs-lisp-mode . 1) ((:file "/home/pawel/.emacs.d/lisp/init-ivy.el") . 1)) ("listenfirst" (nil . 2) (fundamental-mode . 2) ((:symbol "db") . 2) ((:file "/home/pawel/.pgpass") . 2)) ("listenfirst" (nil . 1) (fundamental-mode . 1) ((:symbol "db") . 1) ((:file "/home/pawel/.pgpass") . 1)) ("devvpn" (nil . 1) (fundamental-mode . 1) ((:symbol "nil") . 1) ((:file "/home/pawel/.pgpass") . 1)) ("counsel-projectile-on" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/pawel/.emacs.d/lisp/init-projectile.el") . 1)) ("require-package" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq-default") . 1) ((:file "/home/pawel/.emacs.d/init.el") . 1)) ("erc-spelling-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/pawel/.emacs.d/lisp/init-erc.el") . 1)) ("git-commit-mode-hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "after-load") . 1) ((:file "/home/pawel/.emacs.d/lisp/init-flyspell.el") . 1)) ("VALUES" (nil . 1) (ruby-mode . 1)) ("better" (nil . 1) (ruby-mode . 1)) ("~/.bash_history" (nil . 1) (ruby-mode . 1)) ("input_map" (nil . 1) (ruby-mode . 1) ((:keyword "if") . 1)) ("partial_matches" (nil . 3) (ruby-mode . 3) ((:keyword "do") . 1)) ("curr_partial_match" (nil . 9) (ruby-mode . 9) ((:keyword "if") . 7)) ("prev_partial_match" (nil . 6) (ruby-mode . 6) ((:keyword "if") . 4)) ("curr_partial_match" (nil . 1) (ruby-mode . 1) ((:keyword "if") . 1)) ("partial_matches" (nil . 1) (ruby-mode . 1) ((:keyword "if") . 2)) (":name" (nil . 1) (inf-ruby-mode . 1)) ("MatchData" (nil . 1) (inf-ruby-mode . 1)) ("x.idx" (nil . 1) (inf-ruby-mode . 1)) ("char_idx" (nil . 2) (ruby-mode . 2) ((:keyword "if") . 2)) ("curr_partial_match" (nil . 1) (ruby-mode . 1) ((:keyword "if") . 1)) ("partial_matches" (nil . 1) (ruby-mode . 1) ((:keyword "if") . 1)) ("curr_partial_match" (nil . 1) (ruby-mode . 1) ((:keyword "if") . 1)) ("curr_partial_match" (nil . 1) (ruby-mode . 1) ((:keyword "if") . 1)) ("prev_partial_match" (nil . 1) (ruby-mode . 1) ((:keyword "if") . 1)) ("curr_partial_match" (nil . 1) (ruby-mode . 1) ((:keyword "if") . 1)) ("char_idx" (nil . 1) (ruby-mode . 1) ((:keyword "if") . 1)) ("prev_partial_match" (nil . 1) (ruby-mode . 1) ((:keyword "if") . 1)) ("prev_partial_match" (nil . 1) (ruby-mode . 1) ((:keyword "if") . 1)) ("curr_partial_match" (nil . 1) (ruby-mode . 1) ((:keyword "else") . 2)) ("prev_partial_match" (nil . 1) (ruby-mode . 1) ((:keyword "else") . 1)) ("4].max" (nil . 1) (inf-ruby-mode . 1)) ("curr_partial_match" (nil . 1) (ruby-mode . 1) ((:keyword "if") . 1)) ("curr_partial_match" (nil . 1) (ruby-mode . 1) ((:keyword "else") . 1)) ("each_with_object" (nil . 1) (ruby-mode . 1) ((:keyword "do") . 1) ((:symbol "nil") . 1)) ("prev_partial_match" (nil . 1) (ruby-mode . 1) ((:keyword "do") . 1)) ("require-package" (nil . 1) (emacs-lisp-mode . 1) ((:file "/home/pawel/.emacs.d/lisp/init-org.el") . 1)) ("f-directories" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/pawel/.emacs.d/lisp/init-org.el") . 1)) ("after-load" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/pawel/.emacs.d/lisp/init-org.el") . 1)) ("require-package" (nil . 1) (lisp-interaction-mode . 1)) ("add-auto-mode" (nil . 1) (emacs-lisp-mode . 1) ((:file "/home/pawel/.emacs.d/lisp/init-javascript.el") . 1)) ("constructor" (nil . 1) (js2-mode . 1) ((:keyword "class") . 1) ((:file "/home/pawel/projects/mma-stats/src/main.js") . 1)) ("Component" (nil . 2) (js2-mode . 2) ((:keyword "extends") . 1) ((:symbol "React") . 1) ((:file "/home/pawel/projects/mma-stats/src/main.js") . 2)) ("Component" (nil . 1) (js2-mode . 1) ((:keyword "import") . 1) ((:file "/home/pawel/projects/mma-stats/src/main.js") . 1)) ("fetchFights" (nil . 1) (js2-mode . 1) ((:keyword "await") . 1) ((:file "/home/pawel/projects/mma-stats/scraper/scrape.js") . 1)) ("htmlparser" (nil . 2) (js2-mode . 2) ((:keyword "const") . 2) ((:file "/home/pawel/projects/mma-stats/scraper/scrape.js") . 2)) ("htmlparser" (nil . 1) (js2-mode . 1) ((:keyword "const") . 1) ((:file "/home/pawel/projects/mma-stats/scraper/scrape.js") . 1)) ("counsel-projectile" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "after-load") . 1) ((:file "/home/pawel/.emacs.d/lisp/init-projectile.el") . 1)) ("fightsTable" (nil . 1) (js2-mode . 1) ((:keyword "const") . 1) ((:file "/home/pawel/projects/mma-stats/scraper/scrape.js") . 1)) ("depthLevel" (nil . 3) (js2-mode . 3) ((:keyword "function") . 2) ((:file "/home/pawel/projects/mma-stats/scraper/scrape.js") . 3)) ("depthLevel" (nil . 1) (js2-mode . 1) ((:keyword "if") . 1) ((:file "/home/pawel/projects/mma-stats/scraper/scrape.js") . 1)) ("fetchFights" (nil . 1) (js2-mode . 1) ((:keyword "return") . 5) ((:file "/home/pawel/projects/mma-stats/scraper/scrape.js") . 1)) ("fetchFights" (nil . 1) (js2-mode . 1) ((:keyword "return") . 1) ((:file "/home/pawel/projects/mma-stats/scraper/scrape.js") . 1)) ("depthLevel" (nil . 1) (js2-mode . 1) ((:keyword "function") . 1) ((:file "/home/pawel/projects/mma-stats/scraper/scrape.js") . 1)) ("fetchFights" (nil . 1) (js2-mode . 1) ((:keyword "return") . 1) ((:file "/home/pawel/projects/mma-stats/scraper/scrape.js") . 1)) ("fetchFights" (nil . 1) (js2-mode . 1) ((:keyword "return") . 1) ((:file "/home/pawel/projects/mma-stats/scraper/scrape.js") . 1)) ("fetchFights" (nil . 1) (js2-mode . 1) ((:keyword "return") . 1) ((:file "/home/pawel/projects/mma-stats/scraper/scrape.js") . 1)) ("newFights" (nil . 2) (js2-mode . 2) ((:keyword "return") . 1) ((:file "/home/pawel/projects/mma-stats/scraper/scrape.js") . 2)) ("newFights" (nil . 1) (js2-mode . 1) ((:keyword "await") . 1) ((:file "/home/pawel/projects/mma-stats/scraper/scrape.js") . 1)) ("linkedFights" (nil . 3) (js2-mode . 3) ((:keyword "return") . 1) ((:file "/home/pawel/projects/mma-stats/scraper/scrape.js") . 3)) ("linkedFights" (nil . 1) (js2-mode . 1) ((:keyword "await") . 2) ((:file "/home/pawel/projects/mma-stats/scraper/scrape.js") . 1)) ("isEmpty" (nil . 1) (js2-mode . 1) ((:keyword "await") . 1) ((:symbol "_") . 1) ((:file "/home/pawel/projects/mma-stats/scraper/scrape.js") . 1)) ("linkedFights" (nil . 1) (js2-mode . 1) ((:keyword "await") . 1) ((:file "/home/pawel/projects/mma-stats/scraper/scrape.js") . 1)) ("fightVals" (nil . 1) (js2-mode . 1) ((:keyword "return") . 1) ((:file "/home/pawel/projects/mma-stats/scraper/scrape.js") . 1)) ("nextAll" (nil . 1) (js2-mode . 1) ((:keyword "const") . 1) ((:symbol "nil") . 1) ((:file "/home/pawel/projects/mma-stats/scraper/scrape.js") . 1)) ("bigint" (nil . 1) (sql-mode . 1) ((:keyword "TABLE") . 1) ((:file "/home/pawel/projects/mma-stats/db/mma_stats.sql") . 1)) ("loopDate" (nil . 1) (sql-mode . 1) ((:keyword "BEGIN") . 1) ((:file "/home/pawel/projects/mma-stats/db/mma_stats.sql") . 1)) ("endDate" (nil . 2) (sql-mode . 1) ((:keyword "BEGIN") . 1) ((:file "/home/pawel/projects/mma-stats/db/mma_stats.sql") . 1)) ("DateTime" (nil . 3) (js2-mode . 3) ((:keyword "const") . 3) ((:symbol "luxon") . 1) ((:file "/home/pawel/projects/mma-stats/server/db/seed.js") . 3)) ("DateTime" (nil . 1) (js2-mode . 1) ((:keyword "const") . 1) ((:file "/home/pawel/projects/mma-stats/server/db/seed.js") . 1)) ("DateTime" (nil . 1) (js2-mode . 1) ((:keyword "const") . 1) ((:file "/home/pawel/projects/mma-stats/server/db/seed.js") . 1)) ("fromFormat" (nil . 1) (js2-mode . 1) ((:keyword "const") . 1) ((:symbol "DateTime") . 1) ((:file "/home/pawel/projects/mma-stats/server/db/seed.js") . 1)) ("Interval" (nil . 1) (js2-mode . 1) ((:keyword "const") . 1) ((:file "/home/pawel/projects/mma-stats/server/db/seed.js") . 1)) ("startDate" (nil . 3) (js2-mode . 3) ((:keyword "const") . 3) ((:file "/home/pawel/projects/mma-stats/server/db/seed.js") . 3)) ("startDate" (nil . 1) (js2-mode . 1) ((:keyword "const") . 1) ((:file "/home/pawel/projects/mma-stats/server/db/seed.js") . 1)) ("startDate" (nil . 1) (js2-mode . 1) ((:keyword "const") . 1) ((:file "/home/pawel/projects/mma-stats/server/db/seed.js") . 1)) ("endDate" (nil . 1) (js2-mode . 1) ((:keyword "const") . 1) ((:file "/home/pawel/projects/mma-stats/server/db/seed.js") . 1)) ("granularity" (nil . 2) (js2-mode . 2) ((:keyword "const") . 2) ((:file "/home/pawel/projects/work/tiles/twitter-conversation-analyzer/src/tc/Chart.js") . 2)) ("granularity" (nil . 1) (js2-mode . 1) ((:keyword "const") . 1) ((:file "/home/pawel/projects/work/tiles/twitter-conversation-analyzer/src/tc/Chart.js") . 1)) ("function" (nil . 1) (js2-mode . 1) ((:keyword "function") . 1) ((:file "/home/pawel/projects/mma-stats/scraper/ufc_scraper.js") . 1)) ("require-package" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/pawel/.emacs.d/init.el") . 1)) ("twitter_report_search_terms" (nil . 1) (ruby-mode . 1) ((:keyword "do") . 1) ((:file "/home/pawel/projects/work/dsp/api/spec/models/twitter_report_spec.rb") . 1)) ("actual_search_term" (nil . 1) (ruby-mode . 1) ((:keyword "do") . 1) ((:file "/home/pawel/projects/work/dsp/api/spec/models/twitter_report_spec.rb") . 1)) ("verbatims" (nil . 1) (ruby-mode . 1) ((:keyword "do") . 1) ((:symbol "actual_search_term") . 1) ((:file "/home/pawel/projects/work/dsp/api/spec/models/twitter_report_spec.rb") . 1)) ("Conversions" (nil . 1) (yaml-mode . 1) ((:symbol "campaign") . 1) ((:file "/home/pawel/projects/work/dcr/data-channels/dart/dca.spec") . 1)) ("Through" (nil . 1) (yaml-mode . 1) ((:file "/home/pawel/projects/work/dsp/api/config/story_templates/dart_tabs_template.yaml") . 1)) ("twitter_report_search_terms" (nil . 1) (ruby-mode . 1) ((:keyword "def") . 2) ((:file "/home/pawel/projects/work/cms/db/migrate/20180425020650_reindex_twitter_search_terms.rb") . 2)) ("twitter_report_search_terms" (nil . 1) (ruby-mode . 1) ((:keyword "def") . 1) ((:file "/home/pawel/projects/work/cms/db/migrate/20180425020650_reindex_twitter_search_terms.rb") . 1)) ("unique" (nil . 1) (ruby-mode . 1) ((:keyword "def") . 1) ((:file "/home/pawel/projects/work/cms/db/migrate/20180425020650_reindex_twitter_search_terms.rb") . 1)) ("Verified" (nil . 1) (js2-mode . 1) ((:keyword "const") . 1) ((:file "/home/pawel/projects/work/tiles/twitter-conversation-analyzer/src/tc/TweetTable.js") . 1)) ("verified" (nil . 1) (js2-mode . 1) ((:keyword "return") . 1) ((:symbol "handle") . 1) ((:file "/home/pawel/projects/work/tiles/twitter-conversation-analyzer/src/tc/TweetTable.js") . 1)) ("granularity" (nil . 1) (rjsx-mode . 6) ((:keyword "const") . 1) ((:file "/home/pawel/projects/work/tiles/twitter-conversation-analyzer/src/tc/Chart.js") . 1)) ("mentionsData" (nil . 2) (rjsx-mode . 2) ((:keyword "const") . 1) ((:file "/home/pawel/projects/work/tiles/twitter-conversation-analyzer/src/tc/Chart.js") . 2)) ("granularity" (nil . 1) (rjsx-mode . 1) ((:keyword "return") . 2) ((:file "/home/pawel/projects/work/tiles/twitter-conversation-analyzer/src/tc/Chart.js") . 1)) ("granularity" (nil . 1) (rjsx-mode . 1) ((:keyword "const") . 1) ((:file "/home/pawel/projects/work/tiles/twitter-conversation-analyzer/src/tc/Chart.js") . 1)) ("granularity" (nil . 1) (rjsx-mode . 1) ((:keyword "const") . 1) ((:file "/home/pawel/projects/work/tiles/twitter-conversation-analyzer/src/tc/Chart.js") . 1)) ("granularity" (nil . 1) (rjsx-mode . 1) ((:keyword "return") . 1) ((:file "/home/pawel/projects/work/tiles/twitter-conversation-analyzer/src/tc/Chart.js") . 1)) ("mentionsData" (nil . 1) (rjsx-mode . 1) ((:keyword "return") . 1) ((:file "/home/pawel/projects/work/tiles/twitter-conversation-analyzer/src/tc/Chart.js") . 1)) ("granularity" (nil . 1) (rjsx-mode . 1) ((:keyword "if") . 1) ((:file "/home/pawel/projects/work/tiles/twitter-conversation-analyzer/src/tc/Chart.js") . 1)) ("tickValues" (nil . 1) (rjsx-mode . 1) ((:keyword "const") . 1) ((:file "/home/pawel/projects/work/tiles/twitter-conversation-analyzer/src/tc/Chart.js") . 1)) ("report_params" (nil . 2) (ruby-mode . 2) ((:keyword "self") . 2) ((:file "/home/pawel/projects/work/dsp/api/app/models/twitter_report.rb") . 2)) ("StandardError" (nil . 1) (ruby-mode . 1) ((:keyword "rescue") . 1) ((:file "/home/pawel/projects/work/dsp/api/app/models/twitter_report_search_term.rb") . 1)) ("report_params" (nil . 1) (ruby-mode . 1) ((:keyword "self") . 1) ((:file "/home/pawel/projects/work/dsp/api/app/models/twitter_report.rb") . 1)) ("clean_query" (nil . 1) (ruby-mode . 1) ((:keyword "if") . 1) ((:file "/home/pawel/projects/work/dsp/api/app/models/twitter_report.rb") . 1)) ("max-width" (nil . 1) (scss-mode . 1) ((:file "/home/pawel/projects/work/tiles/twitter-conversation-analyzer/src/_dim_tooltip.scss") . 1)) ("seedEvent" (nil . 1) (js2-mode . 1) ((:keyword "const") . 1) ((:file "/home/pawel/projects/mma-stats/scraper/ufc_scraper.js") . 1)) ("getEventDimentions" (nil . 1) (js2-mode . 1) ((:keyword "const") . 1) ((:file "/home/pawel/projects/mma-stats/scraper/ufc_scraper.js") . 1)) ("writeEventDimensions" (nil . 1) (js2-mode . 1) ((:keyword "const") . 1) ((:file "/home/pawel/projects/mma-stats/scraper/ufc_scraper.js") . 1)) ("dimentsions" (nil . 1) (js2-mode . 1) ((:keyword "const") . 1) ((:file "/home/pawel/projects/mma-stats/scraper/ufc_scraper.js") . 1)) ("infoBoxHTML" (nil . 3) (js2-mode . 3) ((:keyword "const") . 3) ((:file "/home/pawel/projects/mma-stats/scraper/ufc_scraper.js") . 3)) ("infoBoxHTML" (nil . 1) (js2-mode . 1) ((:keyword "const") . 1) ((:file "/home/pawel/projects/mma-stats/scraper/ufc_scraper.js") . 1)) ("nextEvent" (nil . 2) (js2-mode . 2) ((:keyword "const") . 2) ((:file "/home/pawel/projects/mma-stats/scraper/ufc_scraper.js") . 2)) ("nextEvent" (nil . 1) (js2-mode . 1) ((:keyword "const") . 1) ((:file "/home/pawel/projects/mma-stats/scraper/ufc_scraper.js") . 1)) ("eventName" (nil . 1) (js2-mode . 1) ((:keyword "const") . 1) ((:file "/home/pawel/projects/mma-stats/scraper/ufc_scraper.js") . 1)) ("nextEventLink" (nil . 1) (js2-mode . 1) ((:keyword "return") . 1) ((:file "/home/pawel/projects/mma-stats/scraper/ufc_scraper.js") . 1)) ("infoBoxHTML" (nil . 1) (js2-mode . 1) ((:keyword "const") . 1) ((:file "/home/pawel/projects/mma-stats/scraper/ufc_scraper.js") . 1)) ("console" (nil . 1) (js2-mode . 1) ((:keyword "const") . 1) ((:file "/home/pawel/projects/mma-stats/scraper/ufc_scraper.js") . 1)) ("nextEventName" (nil . 1) (js2-mode . 1) ((:keyword "const") . 1) ((:file "/home/pawel/projects/mma-stats/scraper/ufc_scraper.js") . 1)) ("nextEventPath" (nil . 1) (js2-mode . 1) ((:keyword "const") . 1) ((:file "/home/pawel/projects/mma-stats/scraper/ufc_scraper.js") . 1)) ("getEventData" (nil . 1) (js2-mode . 1) ((:keyword "const") . 1) ((:file "/home/pawel/projects/mma-stats/scraper/ufc_scraper.js") . 1)) ("fetchEvents" (nil . 1) (js2-mode . 1) ((:keyword "try") . 1) ((:file "/home/pawel/projects/mma-stats/scraper/ufc_scraper.js") . 1)) ("spacemacs-dark-theme" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq-default") . 1) ((:file "/home/pawel/.emacs.d/init.el") . 1)) ("spacemacs-dark" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/pawel/projects/emacs-theme-gallery/elisp/emacsThemes.el") . 1)) ("spacemacs" (nil . 2) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/pawel/projects/emacs-theme-gallery/elisp/emacsThemes.el") . 1)) ("spacemacs" (nil . 1) (js2-mode . 1) ((:keyword "var") . 1) ((:file "/home/pawel/projects/emacs-theme-gallery/scripts/themeProperties.js") . 1)) ("activity_permissions" (nil . 2) (ruby-mode . 2) ((:keyword "end") . 2) ((:file "/home/pawel/projects/work/cms/db/migrate/20180821142454_create_activity_permissions.rb") . 2)) ("features" (nil . 1) (ruby-mode . 1) ((:keyword "end") . 1) ((:file "/home/pawel/projects/work/cms/db/migrate/20180821142454_create_activity_permissions.rb") . 1)) ("activity_permissions" (nil . 1) (ruby-mode . 1) ((:keyword "end") . 1) ((:file "/home/pawel/projects/work/cms/db/migrate/20180821142454_create_activity_permissions.rb") . 1)) ("feature_id" (nil . 1) (ruby-mode . 1) ((:keyword "end") . 1) ((:file "/home/pawel/projects/work/cms/db/migrate/20180821142454_create_activity_permissions.rb") . 1)) ("unique" (nil . 1) (ruby-mode . 1) ((:keyword "end") . 1) ((:file "/home/pawel/projects/work/cms/db/migrate/20180821142454_create_activity_permissions.rb") . 1)) ("data_affiliation_active_flag" (nil . 1) (sql-mode . 1) ((:keyword "and") . 1) ((:symbol "bsa") . 1) ((:file "/home/pawel/projects/work/lfm-etl/sql/brand_source_affiliations.sql") . 1)) ("retrieves" (nil . 1) (ruby-mode . 1) ((:keyword "do") . 1) ((:file "/home/pawel/projects/work/dsp/api/spec/models/score_spec.rb") . 1)) ("OpenStruct" (nil . 1) (ruby-mode . 1) ((:keyword "do") . 1) ((:file "/home/pawel/projects/work/dsp/api/spec/models/score_spec.rb") . 1)) ("raw_data_point_keys" (nil . 1) (ruby-mode . 1) ((:keyword "end") . 1) ((:symbol "Score") . 1) ((:file "/home/pawel/projects/work/dsp/api/spec/models/score_spec.rb") . 1)) ("tile" (nil . 2) (fundamental-mode . 2)) ("tile" (nil . 1) (fundamental-mode . 1))] company-statistics--index 0)